// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/learngo/penjualan/get-list/:limit/:offset": {
            "get": {
                "description": "Tidak ada",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Penjualan"
                ],
                "summary": "Mendapatkan daftar penjualan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "contoh: 10",
                        "name": "limit",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "contoh: 05",
                        "name": "offset",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "example": "20230115",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "20230120",
                        "name": "dateTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample response",
                        "schema": {
                            "$ref": "#/definitions/penjualan.OutGetPenjualanList"
                        }
                    },
                    "500": {
                        "description": "errorCode = unexpected.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    }
                }
            }
        },
        "/v1/learngo/penjualan/add": {
            "post": {
                "description": "Tidak ada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Penjualan"
                ],
                "summary": "Menambahkan data penjualan baru",
                "parameters": [
                    {
                        "description": "Sample JSON format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/penjualan.BodyAddPenjualan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/penjualan.OutAddPenjualan"
                        }
                    },
                    "500": {
                        "description": "errorCode = unexpected.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    }
                }
            }
        },
        "/v1/learngo/product/add": {
            "post": {
                "description": "Tidak ada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Product"
                ],
                "summary": "Menambahkan data produk baru",
                "parameters": [
                    {
                        "description": "Sample JSON format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.BodyAddProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OutAddProduct"
                        }
                    },
                    "500": {
                        "description": "errorCode = unexpected.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    }
                }
            }
        },
        "/v1/learngo/product/edit": {
            "post": {
                "description": "Tidak ada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Product"
                ],
                "summary": "Mengedit nama dan harga produk",
                "parameters": [
                    {
                        "description": "Sample JSON format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.BodyEditProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OutEditProduct"
                        }
                    },
                    "400": {
                        "description": "errorCode = session.not.exists, errorArgs: [\u003cyour username\u003e]",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    },
                    "404": {
                        "description": "errorCode = network.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    },
                    "500": {
                        "description": "errorCode = unexpected.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    }
                }
            }
        },
        "/v1/learngo/product/get-list/:limit/:offset": {
            "get": {
                "description": "Tidak ada",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Product"
                ],
                "summary": "Mendapatkan list produk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "contoh: 10",
                        "name": "limit",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "contoh: 05",
                        "name": "offset",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "contoh: hai",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample response",
                        "schema": {
                            "$ref": "#/definitions/product.OutGetProductList"
                        }
                    },
                    "500": {
                        "description": "errorCode = unexpected.error",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail"
                        }
                    }
                }
            }
        },
        "/v1/learngo/product/remove": {
            "delete": {
                "description": "Id produk harus terdaftar",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learngo / Product"
                ],
                "summary": "Menghapus produk berdasarkan id",
                "parameters": [
                    {
                        "description": "Sample JSON format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.BodyRemoveProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample response",
                        "schema": {
                            "$ref": "#/definitions/product.OutRemoveProduct"
                        }
                    },
                    "500": {
                        "description": "Unexpected Error. errorCode = unexpected.error, errorArgs: [message1,message2,...]",
                        "schema": {
                            "$ref": "#/definitions/glapi.ResultFail500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "glapi.ResultFail": {
            "type": "object",
            "properties": {
                "errorArgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Apple",
                        "-9000"
                    ]
                },
                "errorCode": {
                    "type": "string",
                    "example": "price.amount.not.valid"
                }
            }
        },
        "glapi.ResultFail500": {
            "type": "object",
            "properties": {
                "errorArgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "query error before ..."
                    ]
                },
                "errorCode": {
                    "type": "string",
                    "example": "unexpected.error"
                }
            }
        },
        "penjualan.BodyAddPenjualan": {
            "type": "object",
            "properties": {
                "itemList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/penjualan.ItemPenjualan"
                    }
                },
                "totalKembalian": {
                    "type": "number",
                    "example": 30000
                },
                "totalPembayaran": {
                    "type": "number",
                    "example": 20000
                }
            }
        },
        "penjualan.ItemPenjualan": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 10000
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "qty": {
                    "type": "number",
                    "example": 5
                }
            }
        },
        "penjualan.OutAddPenjualan": {
            "type": "object",
            "properties": {
                "penjualanId": {
                    "type": "integer",
                    "example": 10
                },
                "totalKembalian": {
                    "type": "number",
                    "example": 30000
                },
                "totalPembayaran": {
                    "type": "number",
                    "example": 50000
                },
                "totalPenjualan": {
                    "type": "number",
                    "example": 20000
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "penjualan.OutGetPenjualanList": {
            "type": "object",
            "properties": {
                "productList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/penjualan.Penjualan"
                    }
                }
            }
        },
        "penjualan.Penjualan": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer",
                    "example": 13
                },
                "penjualanId": {
                    "type": "integer",
                    "example": 10
                },
                "totalKembalian": {
                    "type": "number",
                    "example": 30000
                },
                "totalPembayaran": {
                    "type": "number",
                    "example": 150000
                },
                "totalPenjualan": {
                    "type": "number",
                    "example": 120000
                },
                "version": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "product.BodyAddProduct": {
            "type": "object",
            "required": [
                "productCode",
                "productName"
            ],
            "properties": {
                "price": {
                    "type": "number",
                    "example": 5000
                },
                "productCode": {
                    "type": "string",
                    "example": "P001"
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Rendang"
                }
            }
        },
        "product.BodyEditProduct": {
            "type": "object",
            "required": [
                "price",
                "productId",
                "productName"
            ],
            "properties": {
                "price": {
                    "type": "number",
                    "example": 5000
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Rendang"
                },
                "version": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "product.BodyRemoveProduct": {
            "type": "object",
            "required": [
                "productId"
            ],
            "properties": {
                "productId": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "product.OutAddProduct": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 5000
                },
                "productCode": {
                    "type": "string",
                    "example": "P001"
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Rendang"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "product.OutEditProduct": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 5000
                },
                "productCode": {
                    "type": "string",
                    "example": "P001"
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Rendang"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "product.OutGetProductList": {
            "type": "object",
            "properties": {
                "productList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tables.Product"
                    }
                }
            }
        },
        "product.OutRemoveProduct": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 5000
                },
                "productCode": {
                    "type": "string",
                    "example": "P001"
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Rendang"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "tables.Product": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 3000
                },
                "productCode": {
                    "type": "string",
                    "example": "P001"
                },
                "productId": {
                    "type": "integer",
                    "example": 10
                },
                "productName": {
                    "type": "string",
                    "example": "Indomie Goreng"
                },
                "version": {
                    "type": "integer",
                    "example": 0
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "https://myapp.id",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "LEARN GO API",
	Description:      "APi documentation learn go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
